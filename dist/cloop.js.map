{"version":3,"sources":["onFrame.js","Looper.js","singleton.js","cloop.js"],"names":["VENDORS","glob","window","raf","requestAnimationFrame","caf","cancelAnimationFrame","lastTime","vendor","onFrame","cb","id","frame","Promise","callback","currTime","Date","now","timeToCall","Math","max","setTimeout","clearTimeout","Looper","_handlers","_lastFrame","_hasSetNextFrame","_cancelNextFrame","loop","bind","_instance","delta","callHandlers","nextFrame","handler","e","console","error","length","push","removeHandler","filter","h","clearNextFrame","instance","addHandler"],"mappings":"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","file":"cloop.js","sourceRoot":"../src","sourcesContent":["// Adapted from the Paul Irish gist at https://gist.github.com/paulirish/1579671\n// MIT license\nconst VENDORS = ['ms', 'moz', 'webkit', 'o']\nconst glob = typeof window === 'undefined' ? {} : window\nlet raf = glob.requestAnimationFrame\nlet caf = glob.cancelAnimationFrame\nlet lastTime = 0\n\n// Try looping through vendors\nif (!raf || !caf) {\n  for (const vendor of VENDORS) {\n    raf = glob[`${vendor}RequestAnimationFrame`]\n    caf = glob[`${vendor}CancelAnimationFrame`] || glob[`${vendor}CancelRequestAnimationFrame`]\n  }\n}\n\n// Create setTimeout fallback\nif (!raf || !caf) {\n  raf = (callback) => {\n    const currTime = Date.now()\n    const timeToCall = Math.max(0, 16 - (currTime - lastTime))\n    lastTime = currTime + timeToCall\n    return setTimeout(() => callback(lastTime), timeToCall)\n  }\n  caf = id => clearTimeout(id)\n}\n\n/**\n * Wait a frame, then call the provided callback.\n *\n * @param {Function} cb\n *\n * @returns {Function} Function that cancels the frame.\n */\nexport function onFrame (cb) {\n  const id = raf(cb)\n  return () => caf(id)\n}\n\n/**\n * Awaitable frame.\n *\n * @returns {Promise}\n */\nexport async function frame () {\n  return new Promise(onFrame)\n}\n","import { onFrame } from './onFrame'\n\nexport class Looper {\n  /**\n   * Get singleton instance\n   *\n   * @type { Looper }\n   */\n  static get instance () {\n    if (!this._instance) this._instance = new Looper()\n    return this._instance\n  }\n\n  constructor () {\n    this._handlers = []\n    this._lastFrame = null\n    this._hasSetNextFrame = false\n    this._cancelNextFrame = null\n    this.loop = this.loop.bind(this)\n  }\n\n  /**\n   * Called once per frame. Calculates the time between last frame and\n   * this frame and calls all of the handlers.\n   *\n   * Schedules the next frame.\n   */\n  loop () {\n    const now = Date.now()\n    const delta = now - (this._lastFrame || now)\n    this.callHandlers(delta)\n    this._lastFrame = now\n    this._hasSetNextFrame = false\n    this.nextFrame()\n  }\n\n  /**\n   * Call each handler with a delta.\n   *\n   * @param  {Number} delta The time differenc ebetween last frame and this one.\n   */\n  callHandlers (delta) {\n    for (const handler of this._handlers) {\n      try {\n        handler(delta)\n      } catch (e) {\n        console.error(`Error in loop handler: ${e}`)\n      }\n    }\n  }\n\n  /**\n   * Schedule the next frame.\n   */\n  nextFrame () {\n    if (this._handlers.length && this._hasSetNextFrame === false) {\n      this._hasSetNextFrame = true\n      this._cancelNextFrame = onFrame(this.loop)\n    }\n  }\n\n  /**\n   * Cancel the next frame\n   */\n  clearNextFrame () {\n    this._cancelNextFrame && this._cancelNextFrame()\n    this._cancelNextFrame = null\n    this._hasSetNextFrame = false\n  }\n\n  /**\n   * Add a job to run on frame\n   *\n   * @param {Function} handler\n   *\n   * @return {Function} a function that unsubscribes the handler.\n   */\n  addHandler (handler) {\n    this._handlers.push(handler)\n    this.nextFrame()\n    return this.removeHandler.bind(this, handler)\n  }\n\n  /**\n   * Remove a handler from the list. Stops the loop if there\n   * are no more listeners.\n   *\n   * @param {Function} handler\n   */\n  removeHandler (handler) {\n    this._handlers = this._handlers.filter(function (h) { return h !== handler })\n    if (this._handlers.length === 0) {\n      this._lastFrame = null\n      this.clearNextFrame()\n    }\n  }\n}\n","import { Looper } from './Looper'\n\nexport function loop (cb) {\n  return Looper.instance.addHandler(cb)\n}\n","export * from './Looper'\nexport * from './onFrame'\nexport * from './singleton'\n"]}